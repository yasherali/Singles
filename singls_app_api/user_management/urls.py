from .views import *
from django.urls import include, path
from django_rest_authentication.authentication.django_rest_passwordreset.urls import (
    urlpatterns as password_reset_urls,
)
from django_notification.urls import (
    urlpatterns as notification_urls,
)

urlpatterns = [
    path('social_auth/', SocialAuthenticationView.as_view()),
    path('name_about/', NameAboutView.as_view()),
    path('phone_number_otp/', PhoneNumberOTPAPIView.as_view()),
    path('otp_verify/', OTPVerificationAPIView.as_view()),
    path('gender/', GenderAPIView.as_view()),
    path('main_image/', ImageView.as_view()),
    path('save_profile_image/<str:folder>/<str:filename>/', get_image),
    path('chat_file/<str:date_folder>/<str:email_folder>/<str:filename>/', get_chat_image),
    path('dob/', DOBAPIView.as_view()),
    path('height/', HeightAPIView.as_view()),
    path('weight/', WeightAPIView.as_view()),
    path('hair_color/', HairColorAPIView.as_view()),
    path('eye_color/', EyeColorAPIView.as_view()),
    path('face_verify/', FaceVerifyAPIView.as_view()),
    path('dating_preference/', DatingPreferenceAPIView.as_view()),
    path('skin_color/', SkinColorAPIView.as_view()),
    path('interests/', InterestAPIView.as_view()),
    path('get_profile/', UserProfileAPIView.as_view()),
    path('update_name/', NameUpdateAPIView.as_view()),
    path('update_about/', AboutUpdateAPIView.as_view()),
    path('update_gender/', GenderUpdateAPIView.as_view()),
    path('update_DOB/', DOBUpdateAPIView.as_view()),
    path('update_height/', HeightUpdateAPIView.as_view()),
    path('update_weight/', WeightUpdateAPIView.as_view()),
    path('update_eye/', EyeUpdateAPIView.as_view()),
    path('update_hair/', HairUpdateAPIView.as_view()),
    path('update_skin/', SkinUpdateAPIView.as_view()),
    path('update_dating/', PreferenceUpdateAPIView.as_view()),
    path('update_interest/', InterestUpdateAPIView.as_view()),
    path('update_image/', MainImageView.as_view()),
    path('get_notification/', UserNotificationAPIView.as_view()),
    path('notification/', NotifyAPIView.as_view()),
    path('about_single/', AboutSingleAPIView.as_view()),
    path('privacy_policy/', PrivacyPolicyAPIView.as_view()),
    path('terms_conditions/', TermsAndConditionsAPIView.as_view()),
    path('get_intro_desc/', GetAboutSingleAPIView.as_view()),
    path('get_privacy_policy/', GetPrivacyPolicyAPIView.as_view()),
    path('get_terms_conditions/', GetTermsAndConditionsAPIView.as_view()),
    path('map_active/', MapActiveAPIView.as_view()),
    path('messagesend/', SendMessageAPIView.as_view()),
    path('message_sender/', GetSenderMessagesAPIView.as_view()),
    path('get_user_profiles_home/', GetProfileHomeAPIView.as_view()),
    path('get_conversation/', RecipientListAPIView.as_view()),
    path('signout/', SignoutAPIView.as_view()),
    path('admin_signup/', AdminSignupView.as_view()),
    path('admin_login/', AdminSignInView.as_view()),
    path('user_list/', UserListView.as_view()),
    path('profile_active/', ProfileActiveStatusUpdateAPIView.as_view()),
    path('static_content/', StaticContentCreateAPIView.as_view()),
    path('post_reports/', ReportsCreateAPIView.as_view()),
    path('reports_list/', ReportsListView.as_view()),
    path('reports_update/', ReportsUpdateAPIView.as_view()),
    path('get_static_content/', StaticContentGetAPIView.as_view()),
    path('update_static_content/', StaticContentUpdateAPIView.as_view()),
    path('delete_static_content/', StaticContentDeleteAPI.as_view()),
    path('delete_report_list/', ReportsListDeleteAPI.as_view()),
    path('user_query/', UserQueryAPIView.as_view()),
    path('get_query/', GetQueryAPIView.as_view()),
    path('delete_query/', DeleteQueryAPIView.as_view()),
    path('logout_admin/', LogoutAPIView.as_view()),
    path('fcm_registration/', FcmdeviceAPIView.as_view()),
    path('admin_notification/', AdminNotificationAPIView.as_view()),
    path('create_admin_noti/', CreateAdminNotification.as_view()),
    path('faq_post/', FAQuery.as_view()),
    path('faq_get/', FAQueryGet.as_view()),
    path('blocked_user/', BlockedProfile.as_view()),
    path('unblocked_user/', UnBlockedProfile.as_view()),
    path('blockprofile_listview/', ListBlockedProfile.as_view()),
    path('delete/', DeleteAccount.as_view()),
    #path('notification_notify/', include('django_notification.urls')),
]
